import turtle
t=turtle.Turtle()

def rect(x,y,a):
  t.up()
  t.home()
  t.forward(x)
  t.left(90)
  t.forward(y)
  t.down()
  for i in range(4):
    t.forward(a)
    t.left(-90)
#空行

t.clear()
rect(10,10,100)
rect(10,-110,100)
rect(-110,10,100)
rect(-110,-110,100)

関数：複数の処理をひとまとめにしたもの
オブジェクト：複数の性質と複数の関数をひとまとめにしたもの    

import random
random.randint(1,6)

num=12
import.randint(1,num)
#サイコロの設計図(クラス）
class Dice:
  fase_num=6
  def shoot(self):
    return random.randint(1,self.fase_num)
#空行

aDice=Dice()＃クラスをもとにオブジェクトを作る
aDice.shoot()＃オブジェクトを使う

aDice.face_num=10000
aDice.shoot()

bDice=Dice()    
bDice.shoot()

クラス：オブジェクトの設計図
ーオブジェクト：データと操作をまとめたもの
クラス派生：クラスをもとに、別のクラスを作ること。
　　　　　　新しいクラスはもとのクラスの性質を「継承」する


2**10=1024
CUI
GUI



「>」リダイレクト
「＞＞」追記

for i in range(1000):
  print(i)
  
  python num.py<python total.py
  
標準出力：画面に出力
「＞」を使ってファイルにリダイレクト
標準入力：キーボードから入力
「＜」を使っファイルから入力
